version: "3.9"
      
services:
  
  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "5432:5432"

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      
  migrations:
   build: ..
   depends_on:
     postgres:
       condition: service_healthy
   env_file:
     - .env
   command: >
     sh -c "python manage.py migrate"

  api:

    build:
      dockerfile: ../Dockerfile
      context: ..
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8000:8000"

  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    depends_on:
      - api
    ports:
    - "80:80"

volumes:
  pg_data:
