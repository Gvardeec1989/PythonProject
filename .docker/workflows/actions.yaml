#name: Bild and deploy workflow
#on: [push]
#jobs:
#  build_and_push:
#    runs-on: ubuntu-latest
#    steps:
#      - name: clone code
#        uses: actions/checkout@v2
#      - name: docker build
#        run: docker build -t akuchin89/deploy:$GITHUB_REF_NAME-$GITHUB_RUN_ID
#      - name: docker login
#        run: echo ${{ secrets.DOCKER_TOKEN}} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#      - name: docker pull --help
#
#        run: docker push akuchin89/deploy:$GITHUB_REF_NAME-$GITHUB_RUN_ID
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push
#    env:
#      SECRET_KEY: "${{ secrets.SECRET_KEY }}"
#      DEBUG: "${{ secrets.DEBUG }}"
#      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
#    steps:
#      - name: clone code
#        uses: actions/checkout@v2
#      - name: pushing
#
#        run: |
#          mkdir deploy
#          cat todolist/docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
#          cat todolist/.env | envsubst > deploy/.env
#      - name: copy files to server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          source: "deploy/docker-compose.yaml,deploy/.env"
#          target: todolist
#          strip_components: 1
#
#      - name: Run compose
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          script: |
#            cd todolist
#            docker-compose pull
#            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
name: Build_and_deploy_action
on:
  push:
    branches:
      - master
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: docker build
        run: docker build -t akuchin89/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: docker push
        run: docker push akuchin89/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SOCIAL_AUTH_VK_OAUTH2_KEY: ${{ secrets.SOCIAL_AUTH_VK_OAUTH2_KEY }}
      SOCIAL_AUTH_VK_OAUTH2_SECRET: ${{ secrets.SOCIAL_AUTH_VK_OAUTH2_SECRET }}
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat .docker_env-ci | envsubst > deploy/.docker_env
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy/docker-compose.yaml,deploy/.docker_env"
          target: "app"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd app
            docker compose up -d

